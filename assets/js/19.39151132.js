(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{373:function(t,n,s){"use strict";s.r(n);var e=s(42),a=Object(e.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、树"}},[t._v("#")]),t._v(" 一、树")]),t._v(" "),s("ol",[s("li",[t._v("树的常用概念\n根节点、叶子节点、父节点、子节点、兄弟节点，还有节点的高度、深度以及层数，树的高度。")]),t._v(" "),s("li",[t._v("概念解释\n"),s("ul",[s("li",[t._v("节点：树中的每个元素称为节点")]),t._v(" "),s("li",[t._v("父子关系：相邻两节点的连线，称为父子关系")]),t._v(" "),s("li",[t._v("根节点：没有父节点的节点")]),t._v(" "),s("li",[t._v("叶子节点：没有子节点的节点")]),t._v(" "),s("li",[t._v("父节点：指向子节点的节点")]),t._v(" "),s("li",[t._v("子节点：被父节点指向的节点")]),t._v(" "),s("li",[t._v("兄弟节点：具有相同父节点的多个节点称为兄弟节点关系")]),t._v(" "),s("li",[t._v("节点的高度：节点到叶子节点的最长路径所包含的边数")]),t._v(" "),s("li",[t._v("节点的深度：根节点到节点的路径所包含的边数")]),t._v(" "),s("li",[t._v("节点的层数：节点的深度+1（根节点的层数是1）")]),t._v(" "),s("li",[t._v("树的高度：等于根节点的高度")])])])]),t._v(" "),s("h2",{attrs:{id:"二、二叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、二叉树"}},[t._v("#")]),t._v(" 二、二叉树")]),t._v(" "),s("p",[t._v("1.概念\n①什么是二叉树？\n每个节点最多只有2个子节点的树，这两个节点分别是左子节点和右子节点。")]),t._v(" "),s("p",[t._v("②什么是满二叉树？\n有一种二叉树，除了叶子节点外，每个节点都有左右两个子节点，这种二叉树叫做满二叉树。")]),t._v(" "),s("p",[t._v("③什么是完全二叉树？\n有一种二叉树，叶子节点都在最底下两层，最后一层叶子节都靠左排列，并且除了最后一层，其他层的节点个数都要达到最大，这种二叉树叫做完全二叉树。")]),t._v(" "),s("p",[t._v("2.完全二叉树的存储\n①链式存储\n每个节点由3个字段，其中一个存储数据，另外两个是指向左右子节点的指针。我们只要拎住根节点，就可以通过左右子节点的指针，把整棵树都串起来。这种存储方式比较常用，大部分二叉树代码都是通过这种方式实现的。\n②顺序存储\n用数组来存储，对于完全二叉树，如果节点X存储在数组中的下标为i，那么它的左子节点的存储下标为2"),s("em",[t._v("i，右子节点的下标为2")]),t._v("i+1，反过来，下标i/2位置存储的就是该节点的父节点。注意，根节点存储在下标为1的位置。完全二叉树用数组来存储时最省内存的方式。")]),t._v(" "),s("p",[t._v("3.二叉树的遍历\n3. ①前序遍历：对于树中的任意节点来说，先打印这个节点，然后再打印它的左子树，最后打印它的右子树。\n3. ②中序遍历：对于树中的任意节点来说，先打印它的左子树，然后再打印它的本身，最后打印它的右子树。\n3. ③后序遍历：对于树中的任意节点来说，先打印它的左子树，然后再打印它的右子树，最后打印它本身。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("前序遍历的递推公式：\n\npreOrder(r) = print r->preOrder(r->left)->preOrder(r->right)\n\n中序遍历的递推公式：\n\ninOrder(r) = inOrder(r->left)->print r->inOrder(r->right)\n\n后序遍历的递推公式：\n\npostOrder(r) = postOrder(r->left)->postOrder(r->right)->print r\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("时间复杂度：3种遍历方式中，每个节点最多会被访问2次，所以时间复杂度是O(n)。")]),t._v(" "),s("p",[t._v("二叉树练习")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public class BanarySearchTree {\n\tprivate Node root;\n\n\tpublic boolean insert(int value) {\n\t\tif (root == null) {\n\t\t\troot = new Node(value);\n\t\t\treturn true;\n\t\t}\n\t\tNode parent = root;\n\t\twhile (parent != null) {\n\t\t\tif (parent.data > value) {\n\t\t\t\tif (parent.left == null) {\n\t\t\t\t\tparent.left = new Node(value);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tparent = parent.left;\n\t\t\t} else {\n\t\t\t\tif (parent.right == null) {\n\t\t\t\t\tparent.right = new Node(value);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tparent = parent.right;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic Node find(int value) {\n\t\tNode current = root;\n\t\twhile (current != null) {\n\t\t\tif (current.data > value) {\n\t\t\t\tcurrent = current.left;\n\t\t\t} else if (current.data < value) {\n\t\t\t\tcurrent = current.right;\n\t\t\t} else {\n\t\t\t\treturn current;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic boolean delete(int value) {\n\t\tNode current = root;\n\t\tNode parent = root;\n\t\tBoolean isLeft = true;\n\t\twhile (current.data != value) {\n\t\t\tparent = current;\n\t\t\tif (current.data > value) {\n\t\t\t\tcurrent = current.left;\n\t\t\t\tisLeft = true;\n\t\t\t} else {\n\t\t\t\tcurrent = current.right;\n\t\t\t\tisLeft = false;\n\t\t\t}\n\t\t\tif (current == null)\n\t\t\t\treturn false;\n\t\t}\n\t\tif (current.left == null && current.right == null) {\n\t\t\tif (current == root) {\n\t\t\t\troot = null;\n\t\t\t} else if (isLeft) {\n\t\t\t\tparent.left = null;\n\t\t\t} else {\n\t\t\t\tparent.right = null;\n\t\t\t}\n\t\t} else if (current.left == null) {\n\t\t\tif (current == root) {\n\t\t\t\troot = current.right;\n\t\t\t} else if (isLeft) {\n\t\t\t\tparent.left = current.right;\n\t\t\t} else {\n\t\t\t\tparent.right = current.right;\n\t\t\t}\n\t\t} else if (current.right == null) {\n\t\t\tif (current == root) {\n\t\t\t\troot = current.left;\n\t\t\t} else if (isLeft) {\n\t\t\t\tparent.left = current.left;\n\t\t\t} else {\n\t\t\t\tparent.right = current.left;\n\t\t\t}\n\t\t} else {\n\t\t\tNode successor = getSuccessor(current);\n\t\t\tif (current == root) {\n\t\t\t\troot = successor;\n\t\t\t} else if (isLeft) {\n\t\t\t\tparent.left = successor;\n\t\t\t} else {\n\t\t\t\tparent.right = successor;\n\t\t\t}\n\t\t\tsuccessor.left = current.left;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic Node getSuccessor(Node delNodel) {\n\t\tNode successor = delNodel;\n\t\tNode successorParent = delNodel;\n\t\tNode current = delNodel.right;\n\t\twhile (current != null) {\n\t\t\tsuccessorParent = successor;\n\t\t\tsuccessor = current;\n\t\t\tcurrent = current.left;\n\t\t}\n\n\t\tif (successor != delNodel.right) {\n\t\t\tsuccessorParent.left = successor.right;\n\t\t\tsuccessor.right = delNodel.right;\n\t\t}\n\t\treturn successor;\n\t}\n\n\tpublic void preOrder(Node localNode) {\n\t\tif (localNode != null) {\n\t\t\tSystem.out.print(localNode);\n\t\t\tpreOrder(localNode.left);\n\t\t\tpreOrder(localNode.right);\n\t\t}\n\t}\n\n\tpublic void inOrder(Node localNode) {\n\t\tif (localNode != null) {\n\t\t\tinOrder(localNode.left);\n\t\t\tSystem.out.print(localNode.data);\n\t\t\tinOrder(localNode.right);\n\t\t}\n\t}\n\n\tpublic void postOrder(Node localNode) {\n\t\tif (localNode != null) {\n\t\t\tpostOrder(localNode.left);\n\t\t\tpostOrder(localNode.right);\n\t\t\tSystem.out.print(localNode.data);\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tBanarySearchTree banarySearchTree = new BanarySearchTree();\n\t\tbanarySearchTree.insert(3);\n\t\tbanarySearchTree.insert(10);\n\t\tbanarySearchTree.insert(7);\n\t\tbanarySearchTree.insert(11);\n\t\tbanarySearchTree.insert(15);\n\t\tbanarySearchTree.insert(12);\n\t\tbanarySearchTree.insert(20);\n\t\t// banarySearchTree.delete(10);\n\t\t// System.out.println(banarySearchTree.tree.data);\n\t\t// System.out.println(banarySearchTree.tree.right.data);\n\t\t// System.out.println(banarySearchTree.tree.right.right.data);\n\t\t// System.out.println(banarySearchTree.tree.right.right.left.data);\n\t\t// System.out.println(banarySearchTree.tree.right.right.right.data);\n\t\tbanarySearchTree.inOrder(banarySearchTree.root);\n\t}\n\n\tpublic static class Node {\n\t\tprivate int data;\n\t\tprivate Node left;\n\t\tprivate Node right;\n\n\t\tpublic Node(int data) {\n\t\t\tthis.data = data;\n\t\t}\n\t}\n\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br"),s("span",{staticClass:"line-number"},[t._v("79")]),s("br"),s("span",{staticClass:"line-number"},[t._v("80")]),s("br"),s("span",{staticClass:"line-number"},[t._v("81")]),s("br"),s("span",{staticClass:"line-number"},[t._v("82")]),s("br"),s("span",{staticClass:"line-number"},[t._v("83")]),s("br"),s("span",{staticClass:"line-number"},[t._v("84")]),s("br"),s("span",{staticClass:"line-number"},[t._v("85")]),s("br"),s("span",{staticClass:"line-number"},[t._v("86")]),s("br"),s("span",{staticClass:"line-number"},[t._v("87")]),s("br"),s("span",{staticClass:"line-number"},[t._v("88")]),s("br"),s("span",{staticClass:"line-number"},[t._v("89")]),s("br"),s("span",{staticClass:"line-number"},[t._v("90")]),s("br"),s("span",{staticClass:"line-number"},[t._v("91")]),s("br"),s("span",{staticClass:"line-number"},[t._v("92")]),s("br"),s("span",{staticClass:"line-number"},[t._v("93")]),s("br"),s("span",{staticClass:"line-number"},[t._v("94")]),s("br"),s("span",{staticClass:"line-number"},[t._v("95")]),s("br"),s("span",{staticClass:"line-number"},[t._v("96")]),s("br"),s("span",{staticClass:"line-number"},[t._v("97")]),s("br"),s("span",{staticClass:"line-number"},[t._v("98")]),s("br"),s("span",{staticClass:"line-number"},[t._v("99")]),s("br"),s("span",{staticClass:"line-number"},[t._v("100")]),s("br"),s("span",{staticClass:"line-number"},[t._v("101")]),s("br"),s("span",{staticClass:"line-number"},[t._v("102")]),s("br"),s("span",{staticClass:"line-number"},[t._v("103")]),s("br"),s("span",{staticClass:"line-number"},[t._v("104")]),s("br"),s("span",{staticClass:"line-number"},[t._v("105")]),s("br"),s("span",{staticClass:"line-number"},[t._v("106")]),s("br"),s("span",{staticClass:"line-number"},[t._v("107")]),s("br"),s("span",{staticClass:"line-number"},[t._v("108")]),s("br"),s("span",{staticClass:"line-number"},[t._v("109")]),s("br"),s("span",{staticClass:"line-number"},[t._v("110")]),s("br"),s("span",{staticClass:"line-number"},[t._v("111")]),s("br"),s("span",{staticClass:"line-number"},[t._v("112")]),s("br"),s("span",{staticClass:"line-number"},[t._v("113")]),s("br"),s("span",{staticClass:"line-number"},[t._v("114")]),s("br"),s("span",{staticClass:"line-number"},[t._v("115")]),s("br"),s("span",{staticClass:"line-number"},[t._v("116")]),s("br"),s("span",{staticClass:"line-number"},[t._v("117")]),s("br"),s("span",{staticClass:"line-number"},[t._v("118")]),s("br"),s("span",{staticClass:"line-number"},[t._v("119")]),s("br"),s("span",{staticClass:"line-number"},[t._v("120")]),s("br"),s("span",{staticClass:"line-number"},[t._v("121")]),s("br"),s("span",{staticClass:"line-number"},[t._v("122")]),s("br"),s("span",{staticClass:"line-number"},[t._v("123")]),s("br"),s("span",{staticClass:"line-number"},[t._v("124")]),s("br"),s("span",{staticClass:"line-number"},[t._v("125")]),s("br"),s("span",{staticClass:"line-number"},[t._v("126")]),s("br"),s("span",{staticClass:"line-number"},[t._v("127")]),s("br"),s("span",{staticClass:"line-number"},[t._v("128")]),s("br"),s("span",{staticClass:"line-number"},[t._v("129")]),s("br"),s("span",{staticClass:"line-number"},[t._v("130")]),s("br"),s("span",{staticClass:"line-number"},[t._v("131")]),s("br"),s("span",{staticClass:"line-number"},[t._v("132")]),s("br"),s("span",{staticClass:"line-number"},[t._v("133")]),s("br"),s("span",{staticClass:"line-number"},[t._v("134")]),s("br"),s("span",{staticClass:"line-number"},[t._v("135")]),s("br"),s("span",{staticClass:"line-number"},[t._v("136")]),s("br"),s("span",{staticClass:"line-number"},[t._v("137")]),s("br"),s("span",{staticClass:"line-number"},[t._v("138")]),s("br"),s("span",{staticClass:"line-number"},[t._v("139")]),s("br"),s("span",{staticClass:"line-number"},[t._v("140")]),s("br"),s("span",{staticClass:"line-number"},[t._v("141")]),s("br"),s("span",{staticClass:"line-number"},[t._v("142")]),s("br"),s("span",{staticClass:"line-number"},[t._v("143")]),s("br"),s("span",{staticClass:"line-number"},[t._v("144")]),s("br"),s("span",{staticClass:"line-number"},[t._v("145")]),s("br"),s("span",{staticClass:"line-number"},[t._v("146")]),s("br"),s("span",{staticClass:"line-number"},[t._v("147")]),s("br"),s("span",{staticClass:"line-number"},[t._v("148")]),s("br"),s("span",{staticClass:"line-number"},[t._v("149")]),s("br"),s("span",{staticClass:"line-number"},[t._v("150")]),s("br"),s("span",{staticClass:"line-number"},[t._v("151")]),s("br"),s("span",{staticClass:"line-number"},[t._v("152")]),s("br"),s("span",{staticClass:"line-number"},[t._v("153")]),s("br"),s("span",{staticClass:"line-number"},[t._v("154")]),s("br"),s("span",{staticClass:"line-number"},[t._v("155")]),s("br"),s("span",{staticClass:"line-number"},[t._v("156")]),s("br"),s("span",{staticClass:"line-number"},[t._v("157")]),s("br"),s("span",{staticClass:"line-number"},[t._v("158")]),s("br"),s("span",{staticClass:"line-number"},[t._v("159")]),s("br"),s("span",{staticClass:"line-number"},[t._v("160")]),s("br"),s("span",{staticClass:"line-number"},[t._v("161")]),s("br"),s("span",{staticClass:"line-number"},[t._v("162")]),s("br"),s("span",{staticClass:"line-number"},[t._v("163")]),s("br"),s("span",{staticClass:"line-number"},[t._v("164")]),s("br"),s("span",{staticClass:"line-number"},[t._v("165")]),s("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);